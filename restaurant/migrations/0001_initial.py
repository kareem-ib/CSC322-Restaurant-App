# Generated by Django 3.1.3 on 2020-12-06 00:59

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('warnings', models.IntegerField(default=0)),
            ],
            options={
                'permissions': [('has_vip', 'Has VIP permission')],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_name', models.CharField(max_length=500)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_ratings', models.IntegerField(default=0)),
                ('avg_ratings', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('type', models.CharField(choices=[('CHEF', 'Chef'), ('DP', 'Delivery Person')], max_length=50, verbose_name='Type')),
                ('complaints', models.IntegerField(default=0)),
                ('compliments', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UnproccessedComplaints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snitch_type', models.CharField(choices=[('CUST', 'Customers'), ('DP', 'Delivery Person')], max_length=4)),
                ('snitch_id', models.IntegerField()),
                ('complainee_type', models.CharField(choices=[('CUST', 'Customers'), ('DP', 'Delivery Person'), ('CHEF', 'Chef')], max_length=4)),
                ('complainee_id', models.IntegerField()),
                ('complaint_body', models.TextField()),
                ('dispute_body', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_body', models.TextField()),
                ('dispute_body', models.TextField()),
                ('complainee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_complainee', to='restaurant.customers')),
                ('snitch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports_snitch', to='restaurant.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_posted', models.DateTimeField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Deposits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('CARD', 'Credit Card'), ('CRYPTO', 'Cryptocurrency')], default='CARD', max_length=6)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Chef',
            fields=[
            ],
            options={
                'permissions': [('has_desig_chef', 'Has Designated chef permission')],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('restaurant.staff',),
            managers=[
                ('options', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryPerson',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('restaurant.staff',),
            managers=[
                ('options', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6)),
                ('dine_in_time', models.DateTimeField(null=True)),
                ('order_date', models.DateTimeField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.customers')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.menu')),
                ('chef_prepared', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.chef')),
            ],
            options={
                'ordering': ['-order_date'],
            },
        ),
        migrations.AddField(
            model_name='menu',
            name='dish_chef',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurant.chef'),
        ),
    ]
